@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model Bloggie.Web.Models.ViewModels.AddBlogRequest;

<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h3>Add New BlogPost - Admin Functionality</h3>
    </div>
</div>

<div class="container col-md-8 mx-auto rounded-3 shadow-lg py-5 mt-5">
    <div class="container">
        <form method="post">
            <div class="mb-3">
                <label class="form-label">Heading</label>
                <input type="text" class="form-control" id="heading" asp-for="Heading">
            </div>
            <div class="mb-3">
                <label class="form-label">Page Title</label>
                <input type="text" class="form-control" id="pageTitle" asp-for="PageTitle">
            </div>
            <div class="mb-3">
                <label class="form-label">Conetent</label>
                <textarea type="text" class="form-control" id="content" asp-for="Content"></textarea>
            </div>
            <div class="mb-3">
                <label class="form-label">Short Description</label>
                <input type="text" class="form-control" id="shortDescription" asp-for="ShortDescription">
            </div>
            <div class="mb-3">
                <label class="form-label">Featured Image Upload</label>
                <input type="file" id="featuredImageUpload" class="form-control" />
                <img src="" id="featuredImageDisplay" style="display:none; width:300px;" class="mt-2 border border-secondary-subtle shadow-lg" />
            </div>
            <div class="mb-3">
                <label class="form-label">Featured Image Url</label>
                <input type="text" class="form-control" id="featuredImageUrl" asp-for="FeaturedImageUrl">
            </div>
            <div class="mb-3">
                <label class="form-label">Url Handle</label>
                <input type="text" class="form-control" id="urlHandle" asp-for="UrlHandle">
            </div>
            <div class="mb-3">
                <label class="form-label">Published Date</label>
                <input type="date" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" id="publishedDate" asp-for="PublishedDate">
            </div>
            <div class="mb-3">
                <label class="form-label">Author</label>
                <input type="text" class="form-control" id="author" asp-for="Author">
            </div>
            <div class="form-check mb-3">
                <label class="form-check-label">Visible?</label>
                <input class="form-check-input" type="checkbox" value="" id="visible" asp-for="Visible">
            </div>

            <div class="mb-3">
                <label class="form-label">Tags</label>
                <select class="form-select" asp-items="@Model.Tags" asp-for="SelectedTags">
                </select>
            </div>

            <div class="mb-3">
                <button type="submit" class="btn btn-dark col-md-2 mt-2 shadow">Save</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // to initialize the Froala editor
        var editor = new FroalaEditor('#content', {
            imageUploadURL: '/api/images'
        });

        // accessing the element by id
        const featuredUploadElement = document.getElementById('featuredImageUpload');
        const featuredImageUrlElement = document.getElementById('featuredImageUrl');
        const featuredImageDisplayElement = document.getElementById('featuredImageDisplay');

        // creating an asyn function to upload the image
        async function uploadFeaturedImage(e) {

            console.log(e.target.files[0]);

            let data = new FormData();
            data.append('file', e.target.files[0])

            await fetch('/api/images', {
                method: 'POST',
                headers: {
                    'Accept': '*/*',
                },
                body: data,
            })
            .then(response => response.json())
            .then(result => {
                featuredImageUrlElement.value = result.link;
                featuredImageDisplayElement.src = result.link;
                featuredImageDisplayElement.style.display = 'block';
            });
        }

        // craeting a event listner to call the function to upload an image
        featuredUploadElement.addEventListener('change', uploadFeaturedImage);

    </script>
}